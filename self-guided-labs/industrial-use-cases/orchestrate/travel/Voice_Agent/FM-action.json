{
  "name": "FM-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2025-03-13T23:12:55.294Z",
  "updated": "2025-03-28T09:49:01.301Z",
  "language": "en",
  "skill_id": "f718f82e-5d75-45ef-bccf-10aee0847f2c",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_337",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "input_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/chat",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "40df6eef0635c13aba381494f8cae9fdfb94acb5c81a8ab4fffba5a54d116a59",
                  "match_scenario": 10,
                  "catalog_item_id": "64db5dbf-9567-465c-85ef-0cd924ef783a"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "input_text"
                      },
                      "parameter": "query"
                    },
                    {
                      "value": {
                        "scalar": "12345"
                      },
                      "parameter": "user_id"
                    },
                    {
                      "value": {
                        "expression": "context.system.session_id"
                      },
                      "parameter": "session_id"
                    }
                  ]
                },
                "result_variable": "step_337_result_1"
              }
            },
            "variable": "step_337",
            "next_step": "step_381"
          },
          {
            "step": "step_381",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.query"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_337"
                }
              ]
            },
            "variable": "step_381",
            "condition": {
              "expression": "${step_337_result_1.body.status_code}.toLowerCase() == \"201\""
            },
            "next_step": "step_376"
          },
          {
            "step": "step_376",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Booking Details**:\n\n**Pickup Location**:"
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.final_response.pickup_location"
                          },
                          {
                            "scalar": "\n\n**Drop Location**:"
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.final_response.destination"
                          },
                          {
                            "scalar": "\n\n**Date**:"
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.final_response.date"
                          },
                          {
                            "scalar": "\n\n**Time**:"
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.final_response.time"
                          },
                          {
                            "scalar": "\n\n**Preferred Vehicle**:"
                          },
                          {
                            "variable": "step_337_result_1",
                            "variable_path": "body.final_response.preferences"
                          },
                          {
                            "scalar": "\n\n<br />\n\n\n\nPlease! Let me know if you want to make any changes in the booking?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${destination_value} = ${step_337_result_1.body.final_response.destination}"
                  }
                },
                {
                  "value": {
                    "expression": "${pickup_value} =${step_337_result_1.body.final_response.pickup_location}"
                  }
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_376",
            "condition": {
              "expression": "${step_337_result_1.body.status_code}.toLowerCase() == \"200\""
            },
            "next_step": "step_700"
          },
          {
            "step": "step_700",
            "output": {
              "generic": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/rides",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "51552f0d4b8975195e12cd2a57896b6ee677e6c748526993db7748a9b0eabd61",
                  "match_scenario": 10,
                  "catalog_item_id": "3321e53b-4bcb-4c7d-8513-e00c4fde1bc8"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "destination_value"
                      },
                      "parameter": "destination"
                    },
                    {
                      "value": {
                        "skill_variable": "pickup_value"
                      },
                      "parameter": "current_location"
                    }
                  ],
                  "header": [
                    {
                      "value": {
                        "scalar": "R4Nd0mT0k3n"
                      },
                      "parameter": "token"
                    }
                  ]
                },
                "result_variable": "step_700_result_1"
              }
            },
            "variable": "step_700",
            "condition": {
              "eq": [
                {
                  "variable": "step_376"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_943"
          },
          {
            "step": "step_943",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here are the available ride options,"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "response_type": "response_from_variable",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "max_tries": 3,
              "option_list": {
                "templates": {
                  "label": {
                    "expression": "${item}.name"
                  }
                }
              },
              "source_variable": {
                "variable": "step_700_result_1",
                "variable_path": "body.ride_options"
              }
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_943",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_376"
                    },
                    {
                      "scalar": "no"
                    }
                  ]
                },
                {
                  "eq": [
                    {
                      "variable": "step_700_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                }
              ]
            },
            "next_step": "step_537"
          },
          {
            "step": "step_537",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "You want to confirm your booking?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 0
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_537",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber X\""
                }
              ]
            },
            "next_step": "step_328"
          },
          {
            "step": "step_328",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 0
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/confirm",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "cd77cdefe87e83aa687b6e5b8e1caa716aa1a7cc435b105ebec0b0d63b752af8",
                  "match_scenario": 10,
                  "catalog_item_id": "3321e53b-4bcb-4c7d-8513-e00c4fde1bc8"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "index_value"
                      },
                      "parameter": "option_index"
                    }
                  ],
                  "header": [
                    {
                      "value": {
                        "scalar": "R4Nd0mT0k3n"
                      },
                      "parameter": "token"
                    }
                  ]
                },
                "result_variable": "step_328_result_1"
              }
            },
            "variable": "step_328",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber X\""
                },
                {
                  "eq": [
                    {
                      "variable": "step_537"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                }
              ]
            },
            "next_step": "step_855"
          },
          {
            "step": "step_855",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here is your "
                          },
                          {
                            "variable": "step_328_result_1",
                            "variable_path": "body.chosen_ride.name"
                          },
                          {
                            "scalar": " number WOB ZK 295 arriving in "
                          },
                          {
                            "variable": "step_328_result_1",
                            "variable_path": "body.chosen_ride.arrival_time"
                          },
                          {
                            "scalar": " minutes. Total cost for the trip is "
                          },
                          {
                            "variable": "step_328_result_1",
                            "variable_path": "body.chosen_ride.price"
                          },
                          {
                            "scalar": " euro.\n\n<br />\n\n\n\nOTP and Booking confirmation sent to registered email address."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_855",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber X\""
                },
                {
                  "eq": [
                    {
                      "variable": "step_537"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                }
              ]
            },
            "next_step": "step_254"
          },
          {
            "step": "step_254",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_254",
            "condition": {
              "eq": [
                {
                  "variable": "step_537"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_874"
          },
          {
            "step": "step_874",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "You want to confirm your booking?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 1
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_874",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber Comfort\""
                }
              ]
            },
            "next_step": "step_901"
          },
          {
            "step": "step_901",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 1
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/confirm",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "cd77cdefe87e83aa687b6e5b8e1caa716aa1a7cc435b105ebec0b0d63b752af8",
                  "match_scenario": 10,
                  "catalog_item_id": "3321e53b-4bcb-4c7d-8513-e00c4fde1bc8"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "index_value"
                      },
                      "parameter": "option_index"
                    }
                  ],
                  "header": [
                    {
                      "value": {
                        "scalar": "R4Nd0mT0k3n"
                      },
                      "parameter": "token"
                    }
                  ]
                },
                "result_variable": "step_901_result_1"
              }
            },
            "variable": "step_901",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber Comfort\""
                },
                {
                  "eq": [
                    {
                      "variable": "step_874"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                }
              ]
            },
            "next_step": "step_502"
          },
          {
            "step": "step_502",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here is your "
                          },
                          {
                            "variable": "step_901_result_1",
                            "variable_path": "body.chosen_ride.name"
                          },
                          {
                            "scalar": " number WOB ZK 295 arriving in "
                          },
                          {
                            "variable": "step_901_result_1",
                            "variable_path": "body.chosen_ride.arrival_time"
                          },
                          {
                            "scalar": " minutes. Total cost for the trip is "
                          },
                          {
                            "variable": "step_901_result_1",
                            "variable_path": "body.chosen_ride.price"
                          },
                          {
                            "scalar": " euro.\n\n<br />\n\n\n\nOTP and Booking confirmation sent to registered email address."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_502",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber X\""
                },
                {
                  "eq": [
                    {
                      "variable": "step_874"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                }
              ]
            },
            "next_step": "step_603"
          },
          {
            "step": "step_603",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_603",
            "condition": {
              "eq": [
                {
                  "variable": "step_874"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_440"
          },
          {
            "step": "step_440",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "You want to confirm your booking?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 2
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_440",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber Black\""
                }
              ]
            },
            "next_step": "step_760"
          },
          {
            "step": "step_760",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": 2
                  },
                  "skill_variable": "index_value"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/confirm",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "cd77cdefe87e83aa687b6e5b8e1caa716aa1a7cc435b105ebec0b0d63b752af8",
                  "match_scenario": 10,
                  "catalog_item_id": "3321e53b-4bcb-4c7d-8513-e00c4fde1bc8"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "index_value"
                      },
                      "parameter": "option_index"
                    }
                  ],
                  "header": [
                    {
                      "value": {
                        "scalar": "R4Nd0mT0k3n"
                      },
                      "parameter": "token"
                    }
                  ]
                },
                "result_variable": "step_760_result_1"
              }
            },
            "variable": "step_760",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "expression": "${step_943} == \"Uber Black\""
                },
                {
                  "eq": [
                    {
                      "variable": "step_440"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                }
              ]
            },
            "next_step": "step_983"
          },
          {
            "step": "step_983",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here is your "
                          },
                          {
                            "variable": "step_760_result_1",
                            "variable_path": "body.chosen_ride.name"
                          },
                          {
                            "scalar": " number WOB ZK 295 arriving in "
                          },
                          {
                            "variable": "step_760_result_1",
                            "variable_path": "body.chosen_ride.arrival_time"
                          },
                          {
                            "scalar": " minutes. Total cost for the trip is  "
                          },
                          {
                            "variable": "step_760_result_1",
                            "variable_path": "body.chosen_ride.price"
                          },
                          {
                            "scalar": " euro.\n\n<br />\n\n\n\nOTP and Booking confirmation sent to registered email address."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_983",
            "condition": {
              "and": [
                {
                  "exists": {
                    "variable": "step_943"
                  }
                },
                {
                  "eq": [
                    {
                      "variable": "step_440"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                },
                {
                  "expression": "${step_943} == \"Uber Black\""
                }
              ]
            },
            "next_step": "step_952"
          },
          {
            "step": "step_952",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_952",
            "condition": {
              "eq": [
                {
                  "variable": "step_440"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_706"
          },
          {
            "step": "step_706",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please Specify The Changes"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_706",
            "condition": {
              "eq": [
                {
                  "variable": "step_376"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_448"
          },
          {
            "step": "step_448",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "input_text"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "input_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/chat",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "40df6eef0635c13aba381494f8cae9fdfb94acb5c81a8ab4fffba5a54d116a59",
                  "match_scenario": 10,
                  "catalog_item_id": "64db5dbf-9567-465c-85ef-0cd924ef783a"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "input_text"
                      },
                      "parameter": "query"
                    },
                    {
                      "value": {
                        "scalar": "12345"
                      },
                      "parameter": "user_id"
                    },
                    {
                      "value": {
                        "expression": "context.system.session_id"
                      },
                      "parameter": "session_id"
                    }
                  ]
                },
                "result_variable": "step_448_result_1"
              }
            },
            "variable": "step_448",
            "next_step": "step_471"
          },
          {
            "step": "step_471",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Modified Booking Details**:\n\n**Pickup Location**:"
                          },
                          {
                            "variable": "step_448_result_1",
                            "variable_path": "body.final_response.pickup_location"
                          },
                          {
                            "scalar": ".\n\n**Drop Location**:"
                          },
                          {
                            "variable": "step_448_result_1",
                            "variable_path": "body.final_response.destination"
                          },
                          {
                            "scalar": "\n\n**Date**:"
                          },
                          {
                            "variable": "step_448_result_1",
                            "variable_path": "body.final_response.date"
                          },
                          {
                            "scalar": "\n\n**Time**:"
                          },
                          {
                            "variable": "step_448_result_1",
                            "variable_path": "body.final_response.time"
                          },
                          {
                            "scalar": "\n\n**Preferred Vehicle**:"
                          },
                          {
                            "variable": "step_448_result_1",
                            "variable_path": "body.final_response.preferences"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_471",
            "condition": {
              "exists": {
                "variable": "step_448_result_1",
                "variable_path": "body.final_response"
              }
            }
          }
        ],
        "title": "I want to book a cab",
        "action": "action_8994",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_8994_intent_1659"
        },
        "variables": [
          {
            "title": "Thank you.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_254",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": true
            },
            "variable": "step_328",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_328_result_1",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_337",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_337_result_1",
            "data_type": "any"
          },
          {
            "title": "**Booking Details**: **Pickup Location**:{variable} **Drop Locat",
            "privacy": {
              "enabled": false
            },
            "variable": "step_376",
            "data_type": "yes_no"
          },
          {
            "title": "{variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_381",
            "data_type": "any"
          },
          {
            "title": "You want to confirm your booking?",
            "privacy": {
              "enabled": true
            },
            "variable": "step_440",
            "data_type": "yes_no"
          },
          {
            "title": "{variable}",
            "privacy": {
              "enabled": true
            },
            "variable": "step_448",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_448_result_1",
            "data_type": "any"
          },
          {
            "title": "**Modified Booking Details**: **Pickup Location**:{variable}. **",
            "privacy": {
              "enabled": true
            },
            "variable": "step_471",
            "data_type": "any"
          },
          {
            "title": "Here is your {variable} number WOB ZK 295 arriving in {variable}",
            "privacy": {
              "enabled": true
            },
            "variable": "step_502",
            "data_type": "any"
          },
          {
            "title": "You want to confirm your booking?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_537",
            "data_type": "yes_no"
          },
          {
            "title": "Thank you.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_603",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_700",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_700_result_1",
            "data_type": "any"
          },
          {
            "title": "Please Specify The Changes",
            "privacy": {
              "enabled": false
            },
            "variable": "step_706",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": true
            },
            "variable": "step_760",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_760_result_1",
            "data_type": "any"
          },
          {
            "title": "Here is your {variable} number WOB ZK 295 arriving in {variable}",
            "privacy": {
              "enabled": true
            },
            "variable": "step_855",
            "data_type": "any"
          },
          {
            "title": "You want to confirm your booking?",
            "privacy": {
              "enabled": true
            },
            "variable": "step_874",
            "data_type": "yes_no"
          },
          {
            "title": "",
            "privacy": {
              "enabled": true
            },
            "variable": "step_901",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_901_result_1",
            "data_type": "any"
          },
          {
            "title": "Here are the available ride options,",
            "privacy": {
              "enabled": false
            },
            "variable": "step_943",
            "data_type": "any"
          },
          {
            "title": "Thank you.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_952",
            "data_type": "any"
          },
          {
            "title": "Here is your {variable} number WOB ZK 295 arriving in {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_983",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_8994",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_8994_intent_1659",
        "examples": [
          {
            "text": "Book cab from home to office"
          },
          {
            "text": "Book cab from office to home"
          },
          {
            "text": "I want to book a cab"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "choosen_ride",
        "privacy": {
          "enabled": false
        },
        "variable": "choosen_ride",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "destination_value",
        "privacy": {
          "enabled": false
        },
        "variable": "destination_value",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "index_value",
        "privacy": {
          "enabled": false
        },
        "variable": "index_value",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 0
        }
      },
      {
        "title": "input-text",
        "privacy": {
          "enabled": false
        },
        "variable": "input_text",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "input.text"
        }
      },
      {
        "title": "pickup_value",
        "privacy": {
          "enabled": false
        },
        "variable": "pickup_value",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "query",
        "privacy": {
          "enabled": false
        },
        "variable": "query",
        "data_type": "string",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "hap_filter": {
          "output": {
            "enabled": true
          }
        },
        "slot_filling": {
          "enabled": true
        },
        "general_purpose_answering": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 63d5f595-1375-4343-a7f0-fbb506cf61b5",
  "assistant_id": "1c4e4376-a6c5-4d98-9e93-7338e7f1e21d",
  "workspace_id": "f718f82e-5d75-45ef-bccf-10aee0847f2c",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "c01d9c36-6060-4173-bf92-4a5d8d651590"
}